{"version":3,"sources":["components/HomeScene/examples/phallus.svg","components/HomeScene/examples sync /^/.//.*/.svg$","components/HomeScene/examples/circle.svg","components/HomeScene/examples/crescent.svg","components/HomeScene/examples/cross.svg","components/HomeScene/examples/decagon.svg","components/HomeScene/examples/diamond.svg","components/HomeScene/examples/dodecagon.svg","components/HomeScene/examples/down.svg","components/HomeScene/examples/ellipse.svg","components/HomeScene/examples/equilateral.svg","components/HomeScene/examples/heart.svg","components/HomeScene/examples/heptagon.svg","components/HomeScene/examples/hexagon.svg","components/HomeScene/examples/isosceles.svg","components/HomeScene/examples/nonagon.svg","components/HomeScene/examples/octagon.svg","components/HomeScene/examples/oval.svg","components/HomeScene/examples/parallelogram.svg","components/HomeScene/examples/pentagon.svg","components/HomeScene/examples/rectangle.svg","components/HomeScene/examples/rhombus.svg","components/HomeScene/examples/right.svg","components/HomeScene/examples/scalene.svg","components/HomeScene/examples/semicircle.svg","components/HomeScene/examples/square.svg","components/HomeScene/examples/star10.svg","components/HomeScene/examples/star3.svg","components/HomeScene/examples/star4.svg","components/HomeScene/examples/star5.svg","components/HomeScene/examples/star6.svg","components/HomeScene/examples/trapezoid.svg","components/HomeScene/examples/up.svg","web3/index.js","components/NavBar/twitter.svg","components/NavBar/discord.svg","components/NavBar/index.js","components/HomeScene/ShapesGrid.js","components/HomeScene/index.js","web3/contracts/EtherShapes.js","components/Odds/index.js","components/ToS/index.js","components/FAQ/index.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ready","Promise","reject","document","readyState","window","addEventListener","getWeb3","a","isAvailable","ethereum","provider","connected","connect","ethers","providers","Web3Provider","checksumEthAddress","address","utils","getAddress","Web3Context","React","children","loading","setLoading","web3","setWeb3","account","setAccount","connectWeb3","send","signer","getSigner","localStorage","setItem","on","accounts","removeItem","getItem","loadWeb3","Provider","value","useWeb3","Styles","root","display","flexDirection","paddingTop","paddingBottom","marginBottom","alignItems","rootMobile","navBarRow","connectWallet","borderRadius","padding","fontWeight","color","border","walletInfo","backgroundColor","walletAddress","avatar","overflow","width","height","marginRight","socialButton","socialButtonWrap","socialButtons","socialLink","navLink","fontSize","textDecoration","NavBar","isDesktop","useMediaQuery","query","renderConnectWallet","style","onClick","className","opacity","renderWalletInfo","seed","size","scale","substr","length","href","target","src","Twitter","alt","Discord","to","Phallus","marginLeft","flex","marginTop","ShapesGrid","examples","name","require","default","header","buyBox","maxWidth","buyProgressBarLabel","buyProgressBar","position","buyProgressBarComplete","buyProgressBarLabelContainer","top","left","right","bottom","zIndex","justifyContent","buyForm","boxShadow","buyQuantity","lineItem","buyCheckboxContainer","enterQuantity","connectButton","buyButton","errorMessage","textAlign","link","linkContainer","paddingLeft","saleDetails","millisecondsToHourMinutesSeconds","ms","Math","floor","leadingZero","num","HomeScene","currentSupply","setCurrentSupply","inputQuantity","setInputQuantity","saleCountdownMs","setSaleCountdownMs","error","setError","contractRef","tickCountdownTimer","Date","now","process","REACT_APP_SALE_START_TIME_MS","setTimeout","current","Contract","JSON","stringify","EtherShapesAbi","makeEtherShapesContract","loadCurrentSupply","totalSupply","supply","toNumber","saleProgress","undefined","total","BigNumber","times","onBuyClick","mint","parseEther","toString","tx","console","log","hash","message","includes","onConnectWalletClick","exampleImages","image","arrows","pauseOnHover","canSwipe","duration","transitionDuration","margin","hours","minutes","seconds","type","onChange","event","newValue","isNaN","placeholder","outline","min","max","for","renderBuyButton","Odds","ToS","FAQ","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbbba434.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/phallus.8bc92ffd.svg\";","var map = {\n\t\"./circle.svg\": 79,\n\t\"./crescent.svg\": 80,\n\t\"./cross.svg\": 81,\n\t\"./decagon.svg\": 82,\n\t\"./diamond.svg\": 83,\n\t\"./dodecagon.svg\": 84,\n\t\"./down.svg\": 85,\n\t\"./ellipse.svg\": 86,\n\t\"./equilateral.svg\": 87,\n\t\"./heart.svg\": 88,\n\t\"./heptagon.svg\": 89,\n\t\"./hexagon.svg\": 90,\n\t\"./isosceles.svg\": 91,\n\t\"./nonagon.svg\": 92,\n\t\"./octagon.svg\": 93,\n\t\"./oval.svg\": 94,\n\t\"./parallelogram.svg\": 95,\n\t\"./pentagon.svg\": 96,\n\t\"./phallus.svg\": 29,\n\t\"./rectangle.svg\": 97,\n\t\"./rhombus.svg\": 98,\n\t\"./right.svg\": 99,\n\t\"./scalene.svg\": 100,\n\t\"./semicircle.svg\": 101,\n\t\"./square.svg\": 102,\n\t\"./star10.svg\": 103,\n\t\"./star3.svg\": 104,\n\t\"./star4.svg\": 105,\n\t\"./star5.svg\": 106,\n\t\"./star6.svg\": 107,\n\t\"./trapezoid.svg\": 108,\n\t\"./up.svg\": 109\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;","export default __webpack_public_path__ + \"static/media/circle.609787e0.svg\";","export default __webpack_public_path__ + \"static/media/crescent.6728a944.svg\";","export default __webpack_public_path__ + \"static/media/cross.1fe45239.svg\";","export default __webpack_public_path__ + \"static/media/decagon.0d26a83e.svg\";","export default __webpack_public_path__ + \"static/media/diamond.e03310c9.svg\";","export default __webpack_public_path__ + \"static/media/dodecagon.f9f20dcc.svg\";","export default __webpack_public_path__ + \"static/media/down.6c048498.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.39549564.svg\";","export default __webpack_public_path__ + \"static/media/equilateral.948e89d7.svg\";","export default __webpack_public_path__ + \"static/media/heart.c5373464.svg\";","export default __webpack_public_path__ + \"static/media/heptagon.d6aad28e.svg\";","export default __webpack_public_path__ + \"static/media/hexagon.33c793c2.svg\";","export default __webpack_public_path__ + \"static/media/isosceles.86486b79.svg\";","export default __webpack_public_path__ + \"static/media/nonagon.c9ec5174.svg\";","export default __webpack_public_path__ + \"static/media/octagon.c90815a0.svg\";","export default __webpack_public_path__ + \"static/media/oval.44272a2d.svg\";","export default __webpack_public_path__ + \"static/media/parallelogram.a621489a.svg\";","export default __webpack_public_path__ + \"static/media/pentagon.adbc8680.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.e1b4b03b.svg\";","export default __webpack_public_path__ + \"static/media/rhombus.8523e2c4.svg\";","export default __webpack_public_path__ + \"static/media/right.bb59df81.svg\";","export default __webpack_public_path__ + \"static/media/scalene.19de1951.svg\";","export default __webpack_public_path__ + \"static/media/semicircle.f8b7a164.svg\";","export default __webpack_public_path__ + \"static/media/square.eaf8cfe3.svg\";","export default __webpack_public_path__ + \"static/media/star10.438ca80c.svg\";","export default __webpack_public_path__ + \"static/media/star3.2b6f7e77.svg\";","export default __webpack_public_path__ + \"static/media/star4.e49370ef.svg\";","export default __webpack_public_path__ + \"static/media/star5.5c88cc0c.svg\";","export default __webpack_public_path__ + \"static/media/star6.a37cc2c8.svg\";","export default __webpack_public_path__ + \"static/media/trapezoid.c096494d.svg\";","export default __webpack_public_path__ + \"static/media/up.4924cebc.svg\";","import * as React from 'react';\nimport { ethers } from \"ethers\";\n\nconst ready = new Promise(function(resolve, reject) {\n    if (document.readyState === 'complete') {\n        resolve();\n    }\n    window.addEventListener('load', function() {\n        resolve();\n    });\n});\n\nasync function getWeb3() {\n    await ready;\n\n    const isAvailable = !!window.ethereum;\n    if (!isAvailable) {\n        return {\n            isAvailable,\n            provider: null,\n            connected: false,\n            connect: null,\n        };\n    }\n    const provider = isAvailable && new ethers.providers.Web3Provider(window.ethereum);\n\n    return {\n        isAvailable,\n        provider,\n    };\n}\n\nconst checksumEthAddress = (address) => ethers.utils.getAddress(address);\n\nconst Web3Context = React.createContext(null);\n\nexport function Web3Provider({children}) {\n    const [loading, setLoading] = React.useState(true);\n    const [web3, setWeb3] = React.useState({loading: true});\n    const [account, setAccount] = React.useState(null);\n\n    const connectWeb3 = async (provider) => {\n        if (account) {\n            return;\n        }\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = checksumEthAddress(await signer.getAddress());\n        localStorage.setItem('web3_connected', true);\n        window.ethereum.on('accountsChanged', (accounts) => {\n            const account = accounts[0];\n            if (account) {\n                setAccount(checksumEthAddress(accounts[0]));\n            } else {\n                localStorage.removeItem('web3_connected');\n                setAccount(null);\n            }\n        });\n        return address;\n    };\n\n    React.useEffect(() => {\n        async function loadWeb3() {\n            const web3 = await getWeb3();\n            setWeb3(web3);\n            if (localStorage.getItem('web3_connected')) {\n                const address = await connectWeb3(web3.provider);\n                setAccount(address);\n            }\n            setLoading(false);\n        }\n        loadWeb3();\n    }, []);\n\n    const connect = web3.provider && (async () => {\n        const address = await connectWeb3(web3.provider);\n        setAccount(address);\n    });\n\n    return (\n        <Web3Context.Provider value={{...web3, loading, account, connect: connect || null}}>\n            {children}\n        </Web3Context.Provider>\n    );\n}\n\nexport const useWeb3 = () => React.useContext(Web3Context);\n","export default __webpack_public_path__ + \"static/media/twitter.8097ca9d.svg\";","export default __webpack_public_path__ + \"static/media/discord.9a823ca6.svg\";","import Blockies from 'react-blockies';\nimport { useWeb3 } from '../../web3';\n\nimport { useMediaQuery } from 'react-responsive';\n\nimport Phallus from '../HomeScene/examples/phallus.svg';\n\nimport Twitter from './twitter.svg';\nimport Discord from './discord.svg';\nimport {Link} from 'react-router-dom';\n\nconst Styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 16,\n        alignItems: 'center',\n    },\n    rootMobile: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 32,\n        alignItems: 'center',\n    },\n    navBarRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    connectWallet: {\n        borderRadius: 8,\n        padding: 12,\n        fontWeight: 'bold',\n        color: '#fff',\n        border: 'none',\n    },\n    walletInfo: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#333',\n        color: '#fff',\n        borderRadius: 8,\n    },\n    walletAddress: {\n        padding: 8,\n        borderRadius: 8,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    avatar: {\n        borderRadius: 999,\n        overflow: 'hidden',\n        width: 16,\n        height: 16,\n        marginRight: 4,\n    },\n    socialButton: {\n        width: '20px',\n        height: '20px',\n        padding: '8px',\n    },\n    socialButtonWrap: {\n        marginRight: '6px',\n    },\n    socialButtons: {\n        display: 'flex',\n    },\n    socialLink: {\n        height: '36px',\n    },\n    navLink: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n};\n\nexport default function NavBar() {\n    const {loading, isAvailable, provider, account, connect} = useWeb3();\n\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 512px)'\n    });\n\n    const renderLoading = () => null;\n\n    const renderConnectWallet = () => (\n        <button style={Styles.connectWallet} onClick={() => connect()} className=\"animated-rainbow-bg\"><span style={{opacity: 0.9}}>Connect Wallet</span></button>\n    );\n\n    const renderWalletInfo = () => {\n        const numShapes = 10;\n\n        return (\n            <div style={Styles.walletInfo}>\n                <div style={Styles.walletAddress}>\n                    <div style={Styles.avatar}>\n                        <Blockies seed={account} size={4} scale={4} />\n                    </div>\n                    <span className=\"numeric\">{account.substr(0, 6)}…{account.substr(account.length - 4, 4)}</span>\n                </div>\n                {/*<span style={{display: 'flex', flexDirection: 'row', alignItems: 'baseline'}}>*/}\n                {/*    <span className=\"numeric\" style={{marginRight: 4}}>{numShapes}</span>*/}\n                {/*    <span>Shapes</span>*/}\n                {/*</span>*/}\n            </div>\n        );\n    }\n\n    const socialButtons = (\n        <div style={Styles.socialButtons}>\n            <div style={Styles.socialButtonWrap}>\n                <div style={Styles.walletInfo}>\n                    <a href=\"https://twitter.com/EtherShapesNFT\" target=\"_blank\" style={Styles.socialLink}>\n                        <img src={Twitter} alt=\"Twitter\" style={Styles.socialButton} />\n                    </a>\n                </div>\n            </div>\n            <div style={Styles.socialButtonWrap}>\n                <div style={Styles.walletInfo}>\n                    <a href=\"https://discord.gg/3cDcSyFYWP\" target=\"_blank\" style={Styles.socialLink}>\n                        <img src={Discord} alt=\"Discord\" style={Styles.socialButton} />\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n\n    if (!isDesktop) {\n        return (\n            <div style={Styles.rootMobile}>\n                <div style={Styles.navBarRow}>\n                    <Link to=\"/\">\n                        <img src={Phallus} style={{width: 32}} />\n                    </Link>\n                    <Link to=\"/faq\" style={{...Styles.navLink, marginLeft: 24}}>FAQs</Link>\n                    <Link to=\"/tos\" style={{...Styles.navLink, marginLeft: 16}}>Terms of Service</Link>\n                </div>\n                <div style={{...Styles.navBarRow, marginTop: 8}}>\n                    {socialButtons}\n                    {loading && renderLoading()}\n                    {!loading && (account ? renderWalletInfo() : renderConnectWallet())}\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={Styles.root}>\n            <Link to=\"/\">\n                <img src={Phallus} style={{width: 32}} />\n            </Link>\n            <Link to=\"/faq\" style={{...Styles.navLink, marginLeft: 24}}>FAQs</Link>\n            <Link to=\"/tos\" style={{...Styles.navLink, marginLeft: 16}}>Terms of Service</Link>\n            <div style={{flex: 1}} />\n            {socialButtons}\n            {loading && renderLoading()}\n            {!loading && (account ? renderWalletInfo() : renderConnectWallet())}\n        </div>\n    );\n}\n","export default function ShapesGrid() {\n    return null;\n}","import * as React from 'react';\n\nimport {Link} from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\n\nimport {ethers} from 'ethers';\n\nimport {useMediaQuery} from 'react-responsive';\nimport { Fade } from 'react-slideshow-image';\n\nimport {useWeb3} from '../../web3';\nimport {makeEtherShapesContract} from '../../web3/contracts/EtherShapes';\n\nimport ShapesGrid from './ShapesGrid';\n\nconst exampleShapes = [\n    'phallus',\n    'scalene',\n    'star3',\n    'equilateral',\n    'crescent',\n    'up',\n    'hexagon',\n    'rhombus',\n    'trapezoid',\n    'heart',\n    'ellipse',\n    'cross',\n    'oval',\n    'pentagon',\n    'star4',\n    'nonagon',\n    'semicircle',\n    'dodecagon',\n    'circle',\n    'down',\n    'diamond',\n    'isosceles',\n    'heptagon',\n    'octagon',\n    'parallelogram',\n    'right',\n    'rectangle',\n    'star10',\n    'square',\n    'star6',\n    'star5',\n];\nconst examples = exampleShapes.map((name) => require(`./examples/${name}.svg`).default);\n\nconst Styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    buyBox: {\n        marginTop: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: 512,\n    },\n    buyProgressBarLabel: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'baseline',\n        marginBottom: 4,\n    },\n    buyProgressBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        border: '1px solid #333',\n        borderRadius: 8,\n        height: 24,\n        position: 'relative',\n        width: 512,\n        overflow: 'hidden',\n    },\n    buyProgressBarComplete: {\n        backgroundColor: '#39FF14',\n        borderRadius: 4,\n    },\n    buyProgressBarLabelContainer: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 999,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 12,\n    },\n    buyForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: 16,\n        marginBottom: 16,\n        borderRadius: 16,\n        backgroundColor: '#222',\n        color: '#fff',\n        padding: 20,\n        boxShadow: 'rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px',\n    },\n    buyQuantity: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n        marginTop: 8,\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    lineItem: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: 12,\n    },\n    buyCheckboxContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 12,\n        marginBottom: 12,\n    },\n    enterQuantity: {\n        backgroundColor: '#777',\n        border: 'none',\n        borderRadius: 16,\n        padding: 16,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    connectButton: {\n        backgroundColor: 'none',\n        border: 'none',\n        borderRadius: 16,\n        padding: 16,\n    },\n    buyButton: {\n        backgroundColor: '#39FF14',\n        border: 'none',\n        borderRadius: 16,\n        padding: 16,\n    },\n    errorMessage: {\n        textAlign: 'center',\n        color: 'red',\n        fontWeight: 'bold',\n        fontSize: 12,\n        marginBottom: 16,\n    },\n    link: {\n        color: '#eee',\n        textDecoration: 'none',\n    },\n    linkContainer: {\n        marginTop: '20px',\n        paddingLeft: '10px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    },\n    saleDetails: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 480,\n        marginTop: 8,\n        marginBottom: 16,\n    },\n};\nconst TOTAL_SUPPLY = 1000;\n\nfunction millisecondsToHourMinutesSeconds(ms) {\n    ms += 999; // add 999ms to round remaining milliseconds up to the next   second\n    const hours = Math.floor(ms / (1000 * 60 * 60));\n    const minutes = Math.floor(ms / (1000 * 60)) % 60;\n    const seconds = Math.floor(ms / 1000) % 60;\n\n    return [hours, minutes, seconds];\n}\n\nfunction leadingZero(num) {\n    return num >= 0 && num < 10 ? '0' + num : +num;\n}\n\nexport default function HomeScene() {\n    const [currentSupply, setCurrentSupply] = React.useState(null);\n    const [inputQuantity, setInputQuantity] = React.useState(null);\n    const [saleCountdownMs, setSaleCountdownMs] = React.useState(null);\n    const [error, setError] = React.useState(null);\n\n    const contractRef = React.useRef(null);\n\n    const {loading, isAvailable, provider, account, connect} = useWeb3();\n\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 512px)'\n    });\n\n    const tickCountdownTimer = () => {\n        if (Date.now() < process.env.REACT_APP_SALE_START_TIME_MS) {\n            setSaleCountdownMs(process.env.REACT_APP_SALE_START_TIME_MS - Date.now());\n            setTimeout(tickCountdownTimer, 1000);\n        } else {\n            setSaleCountdownMs(null);\n        }\n    };\n\n    React.useEffect(() => {\n        tickCountdownTimer();\n    }, []);\n\n    React.useEffect(() => {\n        if (!provider) return;\n        contractRef.current = makeEtherShapesContract(provider);\n        async function loadCurrentSupply() {\n            try {\n                const supply = await contractRef.current.totalSupply();\n                setCurrentSupply(supply.toNumber());\n            } catch { } // fail silently\n        }\n        loadCurrentSupply();\n        if (account) {\n            const signer = provider.getSigner();\n            contractRef.current = contractRef.current.connect(signer);\n        }\n    }, [provider, account]);\n\n    const saleProgress = !saleCountdownMs && currentSupply && process.env.REACT_APP_SALE_START_TIME_MS !== undefined ? currentSupply / TOTAL_SUPPLY : 0;\n\n    const onInputQualityChange = (event) => {\n        if (!event.target.value) {\n            setInputQuantity('');\n            return;\n        }\n        const newValue = +event.target.value;\n        if (isNaN(newValue)) return;\n        if (newValue <= 0 || newValue > 1000) return;\n        setInputQuantity(newValue);\n        setError(null);\n    };\n\n    const total = inputQuantity && new BigNumber('0.25').times(inputQuantity);\n\n    const onBuyClick = async () => {\n        if (!contractRef.current) return;\n        if (!inputQuantity) return;\n        try {\n            const tx = await contractRef.current.mint(\n                +inputQuantity,\n                {\n                    value: ethers.utils.parseEther(total.toString()),\n                }\n            );\n            console.log(tx.hash);\n        } catch (err) {\n            if (err.message.includes('insufficient funds')) {\n                setError('Insufficient wallet balance');\n            } else {\n                setError(err.message);\n            }\n        }\n    };\n\n    const onConnectWalletClick = async () => {\n        connect();\n    };\n\n    const renderBuyButton = () => {\n        if (process.env.REACT_APP_SALE_START_TIME_MS === undefined) {\n            return (\n                <div style={Styles.enterQuantity}>\n                    <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16, opacity: 0.54}}>Sale has not yet started</span>\n                </div>\n            );\n        }\n\n        if (saleCountdownMs) {\n            const [hours, minutes, seconds] = millisecondsToHourMinutesSeconds(saleCountdownMs);\n            return (\n                <div style={Styles.enterQuantity}>\n                    <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16, opacity: 0.54}}>Sale starts in {leadingZero(hours)}:{leadingZero(minutes)}:{leadingZero(seconds)}</span>\n                </div>\n            );\n        }\n\n        if (loading) {\n            return (\n                <div style={Styles.enterQuantity}>\n                    <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16, opacity: 0.54}}>Loading…</span>\n                </div>\n            );\n        }\n\n        if (!account) {\n            return (\n                <button style={Styles.connectButton} onClick={onConnectWalletClick} className=\"animated-rainbow-bg\">\n                    <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16}}>Connect Wallet</span>\n                </button>\n            );\n        }\n\n        if (!inputQuantity) {\n            return (\n                <div style={Styles.enterQuantity}>\n                    <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16, opacity: 0.54}}>Enter Quantity</span>\n                </div>\n            );\n        }\n\n        return (\n            <button style={Styles.buyButton} onClick={onBuyClick}>\n                <span style={{fontWeight: 'bold', color: '#fff', fontSize: 16}}>Buy</span>\n            </button>\n        );\n    };\n\n    const exampleImages = examples.map((image) => (\n        <div className='each-fade' style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n            <img src={image} className=\"App-logo\" />\n        </div>\n    ));\n\n    return (\n        <div style={Styles.root}>\n            <div>\n                <div style={Styles.header}>\n                    <div className='slide-container' style={{width: '350px', marginBottom: '30px'}}>\n                        <Fade arrows={false} pauseOnHover={false} canSwipe={false} duration={3500} transitionDuration={500}>\n                            {exampleImages}\n                        </Fade>\n                    </div>\n                    <h1 style={{margin: 0, fontSize: isDesktop ? undefined : 44}} className=\"logo\">\n                        EtherShapes\n                    </h1>\n                    <h3 style={{textAlign: 'center'}}>A limited collection of 1,000 stunningly minimalistic unique shapes.<br/>The\n                        ultimate expression of simplicity and beauty.</h3>\n                </div>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                    <div style={{...Styles.buyBox, maxWidth: isDesktop ? 512 : 300}}>\n                        <div>\n                            <div style={Styles.buyProgressBarLabel}>\n                                <span style={{fontSize: 12, fontWeight: 'bold'}}>Shapes sold</span>\n                                <div style={{flex: 1}} />\n                                <span style={{fontSize: 12}}>Ξ0.25 each</span>\n                            </div>\n                            <div style={{...Styles.buyProgressBar, maxWidth: isDesktop ? 512 : 300}}>\n                                <div style={{...Styles.buyProgressBarComplete, flex: saleProgress}} />\n                                <div style={{flex: (1-saleProgress)}} />\n                                <div style={Styles.buyProgressBarLabelContainer}>\n                                    {process.env.REACT_APP_SALE_START_TIME_MS === undefined && 'Sale has not yet started'}\n                                    {saleCountdownMs && process.env.REACT_APP_SALE_START_TIME_MS !== undefined && function() {\n                                        const [hours, minutes, seconds] = millisecondsToHourMinutesSeconds(saleCountdownMs);\n                                        return `Sale starts in ${leadingZero(hours)}:${leadingZero(minutes)}:${leadingZero(seconds)}`;\n                                    }()}\n                                    {!saleCountdownMs && process.env.REACT_APP_SALE_START_TIME_MS !== undefined && (currentSupply ? `${currentSupply} / ${TOTAL_SUPPLY}` : 'Loading...')}\n                                </div>\n                            </div>\n                        </div>\n                        <div style={Styles.buyForm}>\n                            <span style={{fontWeight: 'bold', textAlign: 'center', marginBottom: 8, fontSize: 20}}>Purchase</span>\n                            <div style={Styles.buyQuantity}>\n                                <span style={{marginLeft: 8, fontWeight: 'bold', fontSize: 14}}>Quantity</span>\n                                <input type=\"number\" value={inputQuantity} onChange={onInputQualityChange}placeholder=\"1000\" style={{flex: 1, fontSize: 32, border: 'none', outline: 'none', textAlign: 'right', backgroundColor: 'transparent', color: '#fff'}} className=\"numeric\" min={1} max={1000} />\n                            </div>\n                            <div style={Styles.lineItem}>\n                                <span style={{marginLeft: 8, fontWeight: 'bold', fontSize: 12, opacity: 0.54}}>Total</span>\n                                <div style={{flex: 1}} />\n                                <span style={{marginRight: 8, fontSize: 12}}>{total ? `Ξ${total.toString()}` : '--'}</span>\n                            </div>\n                            <div style={Styles.buyCheckboxContainer}>\n                                {/*<input type=\"checkbox\" id=\"agree\" />*/}\n                                <label for=\"agree\" style={{fontSize: 12, marginLeft: 4, fontWeight: 'bold', opacity: 1, color: '#bbb'}}>\n                                    By purchasing, you are agree to the <Link to=\"/tos\" style={{color: '#eee'}}>Terms of Service</Link> and are aware that you are unironically buying tokenized shapes on the blockchain.\n                                </label>\n                            </div>\n                            {error && <div style={Styles.errorMessage}>{error}</div>}\n                            {renderBuyButton()}\n                        </div>\n                    </div>\n                    <div style={{...Styles.saleDetails, maxWidth: isDesktop ? 480 : 280}}>\n                        <span style={{fontSize: 12, fontWeight: 'bold', marginBottom: 4}}>Sale Details</span>\n                        <span style={{fontSize: 12}}>\n                        EtherShapes will be available for purchase until all 1000 examples have been sold or 72 hours after the start of the sale. The design and attributes for each EtherShape will be hidden until revealed at the end of the sale period. All sales are final. <Link to=\"/odds\" style={{textDecoration: 'underline', color: 'inherit'}}>Odds disclosure</Link>\n                    </span>\n                    </div>\n                </div>\n                <ShapesGrid />\n            </div>\n        </div>\n    );\n}\n","import {ethers} from 'ethers';\n\nimport EtherShapesAbi from './abi/EtherShapes.json';\n\nexport const makeEtherShapesContract = (provider) => new ethers.Contract(\n    process.env.REACT_APP_CONTRACT_ADDRESS,\n    JSON.stringify(EtherShapesAbi),\n    provider,\n);\n","import {Link} from 'react-router-dom';\n\nexport default function Odds() {\n    return (\n        <div>\n            <Link to='/' className='backButton'>← Back</Link>\n            <h1>Odds Disclosure</h1>\n            <p>Each of the 1000 EtherShapes are unique and possess 3 attributes: base, color, and fill. When buying an EtherShape, the shape’s attributes and design will be unknown. After the sale period ends, we will reveal attributes and designs for all shapes that were sold.</p>\n\n            <p>These are the independent odds of receiving a shape with a given base attribute value:</p>\n            <ul>\n                <li>10 Point Star: 32 in 1000</li>\n                <li>3 Point Star: 32 in 1000</li>\n                <li>4 Point Star: 34 in 1000</li>\n                <li>5 Point Star: 30 in 1000</li>\n                <li>6 Point Star: 33 in 1000</li>\n                <li>Circle: 24 in 1000</li>\n                <li>Crescent: 33 in 1000</li>\n                <li>Cross: 33 in 1000</li>\n                <li>Decagon: 31 in 1000</li>\n                <li>Diamond: 34 in 1000</li>\n                <li>Dodecagon: 30 in 1000</li>\n                <li>Down Arrow: 30 in 1000</li>\n                <li>Ellipse: 33 in 1000</li>\n                <li>Equilateral Triangle: 33 in 1000</li>\n                <li>Heart: 35 in 1000</li>\n                <li>Heptagon: 33 in 1000</li>\n                <li>Hexagon: 30 in 1000</li>\n                <li>Isosceles Triangle: 31 in 1000</li>\n                <li>Large Phallus: 1 in 1000</li>\n                <li>Medium Phallus: 1 in 1000</li>\n                <li>Moon: 1 in 1000</li>\n                <li>Nonagon: 32 in 1000</li>\n                <li>Octagon: 34 in 1000</li>\n                <li>Oval: 33 in 1000</li>\n                <li>Parallelogram: 32 in 1000</li>\n                <li>Pentagon: 33 in 1000</li>\n                <li>Rectangle: 36 in 1000</li>\n                <li>Rhombus: 32 in 1000</li>\n                <li>Right Triangle: 32 in 1000</li>\n                <li>Scalene Triangle: 31 in 1000</li>\n                <li>Semicircle: 33 in 1000</li>\n                <li>Small Phallus: 1 in 1000</li>\n                <li>Square: 30 in 1000</li>\n                <li>Trapezoid: 31 in 1000</li>\n                <li>Up Arrow: 36 in 1000</li>\n            </ul>\n\n            <p>These are the independent odds of receiving a shape with a given color attribute value:</p>\n            <ul>\n                <li>Blue: 48 in 1000</li>\n                <li>Brown: 50 in 1000</li>\n                <li>Chestnut: 47 in 1000</li>\n                <li>Dark Green: 49 in 1000</li>\n                <li>Gold: 47 in 1000</li>\n                <li>Gray: 47 in 1000</li>\n                <li>Indigo: 47 in 1000</li>\n                <li>Lime Green: 49 in 1000</li>\n                <li>Maroon: 48 in 1000</li>\n                <li>Moon: 1 in 1000</li>\n                <li>Navy: 53 in 1000</li>\n                <li>Olive: 50 in 1000</li>\n                <li>Orange: 51 in 1000</li>\n                <li>Pink: 54 in 1000</li>\n                <li>Purple: 47 in 1000</li>\n                <li>Rainbow: 3 in 1000</li>\n                <li>Red: 56 in 1000</li>\n                <li>Salmon: 52 in 1000</li>\n                <li>Sky Blue: 53 in 1000</li>\n                <li>Slate: 53 in 1000</li>\n                <li>Thistle: 47 in 1000</li>\n                <li>Yellow: 48 in 1000</li>\n            </ul>\n\n            <p>These are the independent odds of receiving a shape with a given fill attribute value:</p>\n            <ul>\n                <li>Filled: 501 in 1000</li>\n                <li>Outlined: 499 in 1000</li>\n            </ul>\n        </div>\n    )\n}\n","import {Link} from 'react-router-dom';\n\nexport default function ToS() {\n    return (\n        <div>\n            <Link to='/' className='backButton'>← Back</Link>\n            <h1>Terms of Service</h1>\n            <p>\n                Last Updated 8/13/2021\n                <br />\n                EtherShapes is an application on the Ethereum network, using “Smart Contracts” and the “Site” at ethershapes.com (collectively, the “App”), that allows users to buy and hold digital shapes for fun. Please read these Terms of Service carefully because they govern your use of our Site and App. These Terms and the documents that are referred to herein constitute a binding obligation between you and the owner of EtherShapes. To make these Terms easier to read, we collectively refer to the Site, our services and App as the “Services.” A “Virtual Currency” is any blockchain based currency such as Ethereum.\n                <br />\n\n                <br />\n                1. Agreement to Terms. By using our Services, you agree to be bound by these Terms. If you don’t agree to be bound by these Terms, do not use the Services. If you are accessing and using the Services on behalf of a company (such as your employer) or other legal entity, you represent and warrant that you have the authority to bind that company or other legal entity to these Terms. In that case, “you” and “your” will refer to that company or other legal entity.\n                <br />\n\n                <br />\n                2. Changes to Terms or Services. We may update the Terms at any time, in our sole discretion. If we do so, we’ll let you know either by posting the updated Terms on the Site or through other communications. It’s important that you review the Terms whenever we update them or you use the Services. If you continue to use the Services after we have posted updated Terms, you are agreeing to be bound by the updated Terms. If you don’t agree to be bound by the updated Terms, then you may not use the Services anymore. Because our Services are evolving over time we may change or discontinue all or any part of the Services, at any time and without notice, at our sole discretion.\n                <br />\n\n                <br />\n                3. Who May Use the Services?\n                <br />\n                (a) Eligibility. You may use the Services only if you are 13 years or older, capable of forming a binding contract with EtherShapes and are not barred from using the Services under applicable law.\n                <br />\n                (b) Ethereum Wallet Required. In order to use our Services, you will need a Virtual Currency known as Ethereum. For more information about Ethereum, please visit https://www.ethereum.org/. Ethereum can be purchased, stored, and managed through various third-party electronic wallet applications (“Wallet”), such as Metamask. You will need to use a third-party Wallet in order to access our Services. EtherShapes does not provide its own Wallet. When using our Services, you are uniquely identified by your Wallet—your purchases, trades, battles, and other interactions with our Services are all done through your Wallet. You hereby accept and acknowledge that your Wallet is operated by a third-party, not EtherShapes, and that EtherShapes is not responsible for the content, products or services provided to you by that third-party.\n                <br />\n\n                <br />\n                4. The EtherShapes Services.\n                <br />\n                (a) Sole Permissible Purpose. We provide the Services to you for a single purpose: to provide a way to collect digital shapes. EtherShapes grants you a limited license to use the Services only for this purpose. You may not use the Services for any other purpose.\n                <br />\n                (b) Digital Items Provided Through the Service. Our Services allow you to purchase digital shapes. You agree to pay the applicable fees for purchasing such digital shapes. THERE IS NO GUARANTEE THAT THE DIGITAL SHAPES WILL HAVE ANY RESALE VALUE OF ANY NATURE. THE SHAPES ARE PROVIDED FOR ENTERTAINMENT AND NOT FOR INVESTMENT OR RESALE. Each shape has 3 different attributes, each with different values. For more information on the probability of obtaining each attribute value, please visit: https://ethershapes.com/odds.\n                <br />\n                (c) Digital Items Are Not Convertible. You hereby accept and acknowledge that any digital items provided to you through Services, including but not limited to digital shapes, are collectable items only and cannot be sold for, or otherwise converted into, cash value. You hereby accept and acknowledge that any digital items provided to you through the Services cannot be purchased for speculative purposes, and, unless otherwise required by law or permitted by this Agreement, are not redeemable or refundable for any sum of money or monetary value from EtherShapes at any time.\n                <br />\n                (d) Relationship. Nothing in these Terms is intended to nor shall create any partnership, joint venture, agency, consultancy or trusteeship, you and EtherShapes being with respect to one another independent contractors.\n                <br />\n                (e) Accuracy of Information. You represent and warrant that any information you provide via the Services is accurate and complete. You accept and acknowledge that EtherShapes is not responsible for any errors or omissions that you make in connection with any Virtual Currency transaction initiated via the Services, for instance, if you mistype a Wallet Address or otherwise provide incorrect information. We strongly encourage you to review your transaction details carefully before completing them via the Services.\n                <br />\n                (f) No Cancellations or Modifications. Once transaction details have been submitted to the Virtual Currency network via the Services, the Services cannot assist you to cancel or otherwise modify your transaction details. EtherShapes has no control over any Virtual Currency network and does not have the ability to facilitate any cancellation or modification requests.\n                <br />\n                (g) Taxes. It is your responsibility to determine what, if any, taxes apply to the transactions for which you have submitted transaction details via the Services, and it is your responsibility to report and remit the correct tax to the appropriate tax authority. You agree that EtherShapes is not responsible for determining whether taxes apply to your Virtual Currency transactions or for collecting, reporting, withholding or remitting any taxes arising from any Virtual Currency transactions.\n                <br />\n\n                <br />\n                5. Links to Third Party Websites or Resources. The Services (including the App) may contain links to third-party websites or resources. We provide these links only as a convenience and are not responsible for the content, products or services on or available from those websites or resources or links displayed on such websites. In addition, use of our Services may require you to use third-party websites or resources, such as the Ethereum network. You accept and acknowledge that we do not own or control these third-party websites or resources, that we are not liable for the acts or omissions of any such third parties, and that we are not liable for any damage you may suffer as a result of your interactions with such third parties.\n                <br />\n\n                <br />\n                6. Termination. We may terminate your access to and use of the Services, at our sole discretion, at any time and without notice to you.\n                <br />\n\n                <br />\n                7. Warranty Disclaimers. THE SERVICES AND CONTENT ARE PROVIDED “AS IS,” WITHOUT WARRANTY OF ANY KIND. WITHOUT LIMITING THE FOREGOING, WE EXPLICITLY DISCLAIM ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT AND NON-INFRINGEMENT, AND ANY WARRANTIES ARISING OUT OF COURSE OF DEALING OR USAGE OF TRADE. We make no warranty that the Services will meet your requirements or be available on an uninterrupted, secure, or error-free basis. We make no warranty regarding the quality, accuracy, timeliness, truthfulness, completeness or reliability of any Content.\n                <br />\n\n                <br />\n                8. Indemnity. You will indemnify and hold harmless EtherShapes and its officers, directors, employees and agents, from and against any claims, disputes, demands, liabilities, damages, losses, and costs and expenses, including, without limitation, reasonable legal and accounting fees arising out of or in any way connected with (i) your access to or use of the Services or Content, (ii) your User Content, or (iii) your violation of these Terms.\n                <br />\n\n                <br />\n                9. Limitation of Liability.\n                <br />\n                (a) Assumption of Risk.\n                <br />\n                (i) You hereby accept and acknowledge that the prices associated with Virtual Currency are extremely volatile and subject to change, which could materially and adversely affect your ability to use our Services, and that you are solely liable for the risk associated with the use of Virtual Currency.\n                <br />\n                (ii) You hereby accept and acknowledge that the regulatory regime governing Virtual Currency is evolving, that new regulations or policies may materially and adversely affect your ability to use our Services and our ability to provide those Services to you, and that we are not liable to you for any harm that may result from changes to the governing regulatory regime(s).\n                <br />\n                (iii) You hereby accept and acknowledge that the networks that support Virtual Currency, including but not limited to the Ethereum network, are subject to technological and structural changes that may materially and adversely affect your ability to use our Services and our ability to provide those Services to you. You hereby acknowledge and agree not to hold us liable for any harm that may result to you if it no longer becomes feasible for us to provide our Services to you.\n                <br />\n                (b) NEITHER ETHERSHAPES NOR ANY OTHER PARTY INVOLVED IN CREATING, PRODUCING, OR DELIVERING THE SERVICES OR CONTENT WILL BE LIABLE FOR ANY INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES, OR DAMAGES FOR LOST PROFITS, LOST REVENUES, LOST SAVINGS, LOST BUSINESS OPPORTUNITY, LOSS OF DATA OR GOODWILL, SERVICE INTERRUPTION, COMPUTER DAMAGE OR SYSTEM FAILURE OR THE COST OF SUBSTITUTE SERVICES OF ANY KIND ARISING OUT OF OR IN CONNECTION WITH THESE TERMS OR FROM THE USE OF OR INABILITY TO USE THE SERVICES OR CONTENT, WHETHER BASED ON WARRANTY, CONTRACT, TORT (INCLUDING NEGLIGENCE), PRODUCT LIABILITY OR ANY OTHER LEGAL THEORY, AND WHETHER OR NOT ETHERSHAPES OR ANY OTHER PARTY HAS BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGE, EVEN IF A LIMITED REMEDY SET FORTH HEREIN IS FOUND TO HAVE FAILED OF ITS ESSENTIAL PURPOSE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, SO THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\n                <br />\n                (c) IN NO EVENT WILL ETHERSHAPES’ TOTAL LIABILITY ARISING OUT OF OR IN CONNECTION WITH THESE TERMS OR FROM THE USE OF OR INABILITY TO USE THE SERVICES OR CONTENT EXCEED THE AMOUNTS YOU HAVE PAID TO ETHERSHAPES FOR USE OF THE SERVICES OR CONTENT OR ONE HUNDRED DOLLARS ($100), IF YOU HAVE NOT HAD ANY PAYMENT OBLIGATIONS TO ETHERSHAPES, AS APPLICABLE.\n                <br />\n                (d) THE EXCLUSIONS AND LIMITATIONS OF DAMAGES SET FORTH ABOVE ARE FUNDAMENTAL ELEMENTS OF THE BASIS OF THE BARGAIN BETWEEN ETHERSHAPES AND YOU.\n                <br />\n\n                <br />\n                10. General Terms.\n                <br />\n                (a) Entire Agreement. These Terms constitute the entire and exclusive understanding and agreement between EtherShapes and you regarding the Services and Content, and these Terms supersede and replace any and all prior oral or written understandings or agreements between EtherShapes and you regarding the Services and Content. If any provision of these Terms is held invalid or unenforceable by an arbitrator or a court of competent jurisdiction, that provision will be enforced to the maximum extent permissible and the other provisions of these Terms will remain in full force and effect. You may not assign or transfer these Terms, by operation of law or otherwise, without EtherShapes’ prior written consent. Any attempt by you to assign or transfer these Terms, without such consent, will be null. EtherShapes may freely assign or transfer these Terms without restriction. Subject to the foregoing, these Terms will bind and inure to the benefit of the parties, their successors and permitted assigns.\n                <br />\n                (b) Notices. Any notices or other communications provided by EtherShapes under these Terms, including those regarding modifications to these Terms, will be given: (i) via email; or (ii) by posting to the Services. For notices made by e-mail, the date of receipt will be deemed the date on which such notice is transmitted.\n                <br />\n                (c) Waiver of Rights. EtherShapes’ failure to enforce any right or provision of these Terms will not be considered a waiver of such right or provision. The waiver of any such right or provision will be effective only if in writing and signed by a duly authorized representative of EtherShapes. Except as expressly set forth in these Terms, the exercise by either party of any of its remedies under these Terms will be without prejudice to its other remedies under these Terms or otherwise.\n                <br />\n\n                <br />\n                11. Contact Information. If you have any questions about these Terms or the Services, please contact EtherShapes at ethershapes@gmail.com.\n                <br />\n            </p>\n        </div>\n    )\n}\n","import {Link} from 'react-router-dom';\n\nexport default function FAQ() {\n    return (\n        <div>\n            <Link to='/' className='backButton'>← Back</Link>\n            <h1>FAQ</h1>\n            <h2>How does the sale period work?</h2>\n            <p>At the start of the sale period we will send a transaction to the EtherShapes contract that will start the sales period. During the sales period, shapes can be purchased from our website. The sales period will end when either all 1000 shapes sell out or 19350 ethereum blocks are mined (approximately 72 hours).</p>\n\n            <h2>How do I know what my shapes look like?</h2>\n            <p>During the sale period, the design of each shape is hidden, and they will show up as “Mystery Shape” on the site. After the sale period ends, we will send a transaction to the EtherShapes contract that will reveal the hidden attributes of all shapes. Once this happens, you will be able to see the design of the shapes you purchased.</p>\n\n            <h2>How do you assign shapes to buyers?</h2>\n            <p>Shapes are assigned pseudorandomly. We have launched an Attributes contract at a secret address that maps tokens to shape designs, which was randomly shuffled before deployment. As a zero-knowledge proof of fairness commitment, the SHA256 hash of the Attributes contract address is 54267e18bcef157d6808c0258d0adeacb795a42909b98f8fff52e55454c8d68d, which can be used after the Attributes contract address is disclosed to verify that the Attributes contract was not advantageously selected after the sale period ended. To further make the assignment unpredictable, the EtherShapes contract uses the block number of the last sale as an additional random seed input. When we reveal the attributes, we will point the EtherShapes contract to the Attributes contract.</p>\n\n            <h2>What happens if the shapes don’t sell out?</h2>\n            <p>If the shapes do not sell out within 72 hours, the remaining supply will be burned; there will simply be a smaller supply of shapes in existence, and no more shapes will be created.</p>\n\n            <h2>Where can I see the contracts?</h2>\n            <p>The EtherShapes contract is deployed at address 0x26440e7aa12297484Ce6d8649aD394C0124cea51, with <a href=\"https://etherscan.io/address/0x26440e7aa12297484Ce6d8649aD394C0124cea51\" target=\"_blank\" className='backButton'>verified source code on Etherscan</a>.\n            To maintain fairness and randomness the address of the Attributes contract will be disclosed when attributes are revealed. </p>\n\n            <h2>Why does the contract source code say that 3 shapes are premined?</h2>\n            <p>We are reserving 3 shapes for the winners of social media giveaways and competitions. <a href=\"https://discord.gg/3cDcSyFYWP\" target=\"_blank\" className='backButton'>Check out our Discord for more details!</a>\n            </p>\n\n        </div>\n    )\n}\n","import {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from 'react-router-dom';\n\nimport { Web3Provider } from './web3';\n\nimport NavBar from './components/NavBar';\nimport HomeScene from './components/HomeScene';\nimport Odds from './components/Odds';\nimport ToS from './components/ToS';\nimport FAQ from './components/FAQ';\n\nimport './App.css';\n\nfunction App() {\n  return (\n      <Web3Provider>\n        <Router>\n            <div className=\"App\">\n                <div className=\"content\">\n                    <NavBar />\n                    <Switch>\n                        <Route path=\"/faq\">\n                            <FAQ />\n                        </Route>\n                        <Route path=\"/odds\">\n                            <Odds />\n                        </Route>\n                        <Route path=\"/tos\">\n                            <ToS />\n                        </Route>\n                        <Route path=\"/\">\n                            <HomeScene />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n      </Web3Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-slideshow-image/dist/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}